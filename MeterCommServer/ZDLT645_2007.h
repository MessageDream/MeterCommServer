#pragma once
#include "ZProtocol.h"
#include "ZFileSocket.h"

class ZDLT645_2007:public ZProtocol
{
protected:
	CString m_strMeterAddr;
	CString m_strCtrlCode;
	CString m_strLength;
	CString m_strDataItem;
	CString m_strTgtData;
	CString m_strGrade;
	CString m_strPsWd;
	CString m_strOperaCode;
	CString m_strDiv;
	CString m_strRand1;
	CString m_strEndata1;
	CString m_strRand2;
	CString m_strEsamId;
	CString m_strApdu;
	CString m_strRand2IR;
	static HMODULE m_hDll09SGCC;
	static HMODULE m_hDll13SGCC;
	static HMODULE m_hDll13SPG;
	static HMODULE m_hDll15CSG;
	static HMODULE m_hDll18SGC;
	int m_nDllType;
	BOOL m_nIsRemote;
	CString m_strServerIP;
	CString m_strServerPort;
	CString m_strServerTimeOut;
	CString m_strNetCptIP;
	CString m_strNetCptPort;
	CString m_strNetCptTimeOut;
public:
	ZDLT645_2007(void);
	virtual ~ZDLT645_2007(void);
	static int CallExDll(void);
	static void UncallExDll(void);
	static bool CStringToBYTEArrBy2(const CString & in_str,BYTE *out_pArray,const int & in_nMaxArrayLen);
	CString CStringBy2Plus33(CString str);
	CString Reverse0406XXFF(CString str);
	CString ReverseCStringBy8(CString str);
	CString ReverseCStringBy2(CString str);
	CString ReverseCStringBy2Plus33(CString str);
	int SetIp13SGCC(void);
	int SetIp13SPG(void);
	int OpenDevice15CSG(void);
	CString CloseDevice15CSG(void);
	static CString ErrorInfoID09SGCC(const int & nError);
	static CString ErrorInfoUC09SGCC(const int & nError);
	static CString ErrorInfo09SGCC(const int & nError);
	static CString ErrorInfo13SGCC(const int & nError);
	static CString ErrorInfo13SPG(const int & nError);
	static CString ErrorInfo15CSG(const int & nError);
	static CString ErrorInfo18SGC(const int & nError);
	int InfraredRand13SGCC(void);
	int InfraredRand13SPG(void);
	int InfraredRand15CSG(void);
	int InfraredAuth13SGCC(CString & strData);
	int InfraredAuth13SPG(CString & strData);
	int InfraredAuth15CSG(CString & strData);
	int ESAMIdentityAuthentication18SGC(CString & strData);
	int IdentityAuthentication18SGC(void);
	int IdentityAuthentication15CSG(void);
	int IdentityAuthentication13SPG(void);
	int IdentityAuthentication13SGCC(void);
	int IdentityAuthentication09SGCC(void);
	int ParameterElseUpdate18SGC(CString & strData);
	int ParameterElseUpdate15CSG(CString & strData);
	int ParameterElseUpdate13SPG(CString & strData);
	int ParameterElseUpdate13SGCC(CString & strData);
	int ParameterElseUpdate09SGCC(CString & strData);
	int ParameterUpdate18SGC(CString & strData);
	int ParameterUpdate15CSG(CString & strData);
	int Price1Update15CSG(CString & strData);
	int Price2Update15CSG(CString & strData);
	int ParameterUpdate13SPG(CString & strData);
	int ParameterUpdate113SPG(CString & strData);
	int ParameterUpdate213SPG(CString & strData);
	int ParameterUpdate13SGCC(CString & strData);
	int ParameterUpdate113SGCC(CString & strData);
	int ParameterUpdate213SGCC(CString & strData);
	int ParameterUpdate09SGCC(CString & strData);
	int ParameterUpdate109SGCC(CString & strData);
	int ParameterUpdate209SGCC(CString & strData);
	void GetN1NmData(CString & strData);
	int DataClear115CSG(CString & strData);
	int DataClear113SPG(CString & strData);
	int DataClear113SGCC(CString & strData);
	int DataClear215CSG(CString & strData);
	int DataClear213SPG(CString & strData);
	int DataClear213SGCC(CString & strData);
	int UserControl18SGC(CString & strData);
	int UserControl15CSG(CString & strData);
	int UserControl13SPG(CString & strData);
	int UserControl13SGCC(CString & strData);
	int UserControl09SGCC(CString & strData);
	int InitPurse18SGC(CString & strData);
	int InitPurse15CSG(CString & strData);
	int InintPurse13SPG(CString & strData);
	int InintPurse13SGCC(CString & strData);
	int InCreasePurse09SGCC(CString & strData);
	int SwitchChargeMode15CSG(CString & strData);
	static int ReadParamPresetCard18SGC(CString & strCardNum, CString & strAppBina, CString & strMoney, CString & strTimeZoneParam);
	static int WriteParamPresetCard18SGC(const CString & strIp, const CString & strPort, const CString & strTimeOut, const CString & strAppBina, const CString & strMoney, const CString & strTimeZoneParam);
	static int ReadTestingCard18SGC(CString & strCardNum, CString & strESAMAppBina, CString & strESAMWorkInfo, CString & strESAMMoney);
	static int ReadIncreaseAmountCard18SGC(CString & strCardNum, CString & strAppBina);
	static int WriteIncreaseAmountCard18SGC(const CString & strIp, const CString & strPort, const CString & strTimeOut, const CString & strAppBina);
	static int ReadModifyMeterNumCard18SGC(CString & strCardNum, CString & strAppBina, CString & strReverAppBina);
	static int WriteModifyMeterNumCard18SGC(const CString & strIp, const CString & strPort, const CString & strTimeOut, const CString & strAppBina, const CString & strReverAppBina);
	int GetEncodeRemoteData(CString & strData,CString & strError);
	bool SocketCommunication(const CString & strDataIn,CString & strDataOut);
	int GetApdu(void);
	int GetApduDeviation(CString & strDeviation);
	static CString GetCheckSum(CString str);
	static BYTE GetCheckSum(BYTE * p_c,int nLen);
	virtual int DataEncode(CString & strData,CString & strError);
	virtual bool DataDecode(CString strData,CString & strValue);
	virtual CString GetLength(void);
	static bool Check645_2007(CString str);
	CString ReverseCStringBy2Minus33(CString str);
	void ChooseDll(const int & nDllType);
	int GetDllChoose(void);
	void ChooseMode(const BOOL & nIsRemote);
	BOOL GetModeChoose(void);
	void SetServerInfo(const CString & strIP, const CString & strPort, const CString & strTimeOut);
	void GetServerInfo(CString & strIP, CString & strPort, CString & strTimeOut);
	void SetNetCptInfo(const CString & strIP, const CString & strPort, const CString & strTimeOut);
	void GetNetCptInfo(CString & strIP, CString & strPort, CString & strTimeOut);
	bool Set15Param(const CString & strParam);
	CString GetCtrlCode(void);
	void SetCtrlCode(const CString & strCtrlCode);
	CString GetDataItem(void);
	void SetDataItem(const CString & strDataItem);
	CString GetMeterAddr(void);
	void SetMeterAddr(const CString & strMeterAddr);
	CString GetGrade(void);
	CString GetPsWd(void);
	CString GetOperaCode(void);
	CString GetDiv(void);
	CString GetParamByCstring(void);
	bool SetParamByCstring(const CString & strParam);
};

